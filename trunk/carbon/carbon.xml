<application name="carbon">
  <delay_guarantee>10000</delay_guarantee>
  <operator name="net1" fileURI="NetRequestDevice.hh" requestGenerator="true">
    <port name="in">
      <direction>IN</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <core_type>requestDevices::NetRequestDevice</core_type>
  </operator>
  <operator name="carbon_op_queue_primary">
   <state fileURI="RequestLog.hh">
      <init_method>my_init</init_method>
      <install_method>my_install</install_method>
      <get_method>my_get</get_method>
      <purge_method>my_purge</purge_method>
      <flow_sig name="fivetuple">
        <core_type>requestTypes::NetRequest</core_type>
        <get_flow_ID>getSourceID</get_flow_ID>
      </flow_sig>
      <dataItem name="requestQueue">
        <dataType>std::queue&lt;queue_log_records::RequestLog_p&gt;</dataType>
      </dataItem>
     <dataItem name="lockOnQueue">
 	<dataType>utilities::Lock_p</dataType>
      </dataItem>
     <dataItem name="clientKeyHash">
 	<dataType>utilities::ClientKeyHash_p</dataType>
     </dataItem>
   </state>
    <port name="in">
      <direction>IN</direction>
      <handler>handleRequest</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out_repl_1">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out_repl_2">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out_repl_3">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="qwait">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="qsignal">
      <direction>IN</direction>
      <handler>handleSignal</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
  </operator>
  <operator name="carbon_op_queue_repl_1">
   <state fileURI="RequestLog.hh">
      <init_method>my_init</init_method>
      <install_method>my_install</install_method>
      <get_method>my_get</get_method>
      <purge_method>my_purge</purge_method>
      <flow_sig name="fivetuple">
        <core_type>requestTypes::NetRequest</core_type>
        <get_flow_ID>getSourceID</get_flow_ID>
      </flow_sig>
      <dataItem name="requestQueue">
        <dataType>std::queue&lt;queue_log_records::RequestLog_p&gt;</dataType>
      </dataItem>
     <dataItem name="lockOnQueue">
 	<dataType>utilities::Lock_p</dataType>
      </dataItem>
   </state>
    <port name="in">
      <direction>IN</direction>
      <handler>handleRequest</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="qwait">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="qsignal">
      <direction>IN</direction>
      <handler>handleSignal</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
  </operator>
  <operator name="carbon_op_queue_repl_2">
   <state fileURI="RequestLog.hh">
      <init_method>my_init</init_method>
      <install_method>my_install</install_method>
      <get_method>my_get</get_method>
      <purge_method>my_purge</purge_method>
      <flow_sig name="fivetuple">
        <core_type>requestTypes::NetRequest</core_type>
        <get_flow_ID>getSourceID</get_flow_ID>
      </flow_sig>
      <dataItem name="requestQueue">
        <dataType>std::queue&lt;queue_log_records::RequestLog_p&gt;</dataType>
      </dataItem>
     <dataItem name="lockOnQueue">
 	<dataType>utilities::Lock_p</dataType>
      </dataItem>
   </state>
    <port name="in">
      <direction>IN</direction>
      <handler>handleRequest</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="qwait">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="qsignal">
      <direction>IN</direction>
      <handler>handleSignal</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
  </operator>
  <operator name="carbon_op_queue_repl_3">
   <state fileURI="RequestLog.hh">
      <init_method>my_init</init_method>
      <install_method>my_install</install_method>
      <get_method>my_get</get_method>
      <purge_method>my_purge</purge_method>
      <flow_sig name="fivetuple">
        <core_type>requestTypes::NetRequest</core_type>
        <get_flow_ID>getSourceID</get_flow_ID>
      </flow_sig>
      <dataItem name="requestQueue">
        <dataType>std::queue&lt;queue_log_records::RequestLog_p&gt;</dataType>
      </dataItem>
     <dataItem name="lockOnQueue">
 	<dataType>utilities::Lock_p</dataType>
      </dataItem>
   </state>
    <port name="in">
      <direction>IN</direction>
      <handler>handleRequest</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
	<core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="qwait">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="qsignal">
      <direction>IN</direction>
      <handler>handleSignal</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
  </operator>
  <operator name="carbon_op_echoserver">
     <state fileURI="RequestCount.hh">
      <init_method>my_init</init_method>
      <install_method>my_install</install_method>
      <get_method>my_get</get_method>
      <purge_method>my_purge</purge_method>
      <flow_sig name="fivetuple">
        <core_type>requestTypes::NetRequest</core_type>
        <get_flow_ID>getSourceID</get_flow_ID>
      </flow_sig>
      <dataItem name="waitReqCount">
	<dataType>request_counter::RequestCount_p</dataType>
      </dataItem>
     </state>
     <port name="in">
      <direction>IN</direction>
      <handler>handleRequest</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="out">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>requestTypes::NetRequest</core_type>
      </type>
    </port>
    <port name="ewait">
      <direction>IN</direction>
      <handler>handleWait</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="esignal_primary">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="esignal_repl_1">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="esignal_repl_2">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>
    <port name="esignal_repl_3">
      <direction>OUT</direction>
      <handler>null</handler>
      <type name="NetRequest" fileURI="NetRequest.hh">
        <core_type>int</core_type>
      </type>
    </port>

 </operator>  
  <connector>
    <con_reference>net1.out</con_reference>
    <con_reference>carbon_op_queue_primary.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_primary.out</con_reference>
    <con_reference>carbon_op_echoserver.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_primary.out_repl_1</con_reference>
    <con_reference>carbon_op_queue_repl_1.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_primary.out_repl_2</con_reference>
    <con_reference>carbon_op_queue_repl_2.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_primary.out_repl_3</con_reference>
    <con_reference>carbon_op_queue_repl_3.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_echoserver.out</con_reference>
    <con_reference>net1.in</con_reference>
  </connector>
   <connector>
    <con_reference>carbon_op_queue_primary.qwait</con_reference>
    <con_reference>carbon_op_echoserver.ewait</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_1.out</con_reference>
    <con_reference>carbon_op_echoserver.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_2.out</con_reference>
    <con_reference>carbon_op_echoserver.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_3.out</con_reference>
    <con_reference>carbon_op_echoserver.in</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_1.qwait</con_reference>
    <con_reference>carbon_op_echoserver.ewait</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_2.qwait</con_reference>
    <con_reference>carbon_op_echoserver.ewait</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_queue_repl_3.qwait</con_reference>
    <con_reference>carbon_op_echoserver.ewait</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_echoserver.esignal_primary</con_reference>
    <con_reference>carbon_op_queue_primary.qsignal</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_echoserver.esignal_repl_1</con_reference>
    <con_reference>carbon_op_queue_repl_1.qsignal</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_echoserver.esignal_repl_2</con_reference>
    <con_reference>carbon_op_queue_repl_2.qsignal</con_reference>
  </connector>
  <connector>
    <con_reference>carbon_op_echoserver.esignal_repl_3</con_reference>
    <con_reference>carbon_op_queue_repl_3.qsignal</con_reference>
  </connector>
</application>
